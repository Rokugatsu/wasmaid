declare_args() {
  use_clang = false
  use_libcxx = false
  use_asan = false
  use_ubsan = false
  use_tsan = false
  use_strict_mode = false
  build_type = "debug"
}

# toolchain
if (host_os == "mac") {
  set_default_toolchain("toolchain/macos:clang")
}

if (host_os == "linux") {
  if (use_clang) {
    set_default_toolchain("toolchain/linux:clang")
  } else {
    set_default_toolchain("toolchain/linux:gcc")
  }
}

# compile configuration
set_defaults("executable") {
  configs = [ "//buildconfig:global_config" ]
  configs += [ "//buildconfig:executable" ]

  if (host_os == "mac") {
    configs += [ "//buildconfig:homebrew" ]
  }

  if (build_type == "release") {
    configs += [ "//buildconfig:release" ]
  } else if (build_type == "debug") {
    configs += [ "//buildconfig:debug" ]
  }

  if (use_asan) {
    configs += [ "//buildconfig:asan" ]
  }
  if (use_ubsan) {
    configs += [ "//buildconfig:ubsan" ]
  }
  if (use_tsan) {
    configs += [ "//buildconfig:tsan" ]
  }
}

set_defaults("shared_library") {
  configs = [ "//buildconfig:global_config" ]
  configs += [ "//buildconfig:shared_library" ]

  if (host_os == "mac") {
    configs += [ "//buildconfig:homebrew" ]
  }

  if (build_type == "release") {
    configs += [ "//buildconfig:release" ]
  } else if (build_type == "debug") {
    configs += [ "//buildconfig:debug" ]
  }

  if (use_asan) {
    configs += [ "//buildconfig:asan" ]
  }
  if (use_ubsan) {
    configs += [ "//buildconfig:ubsan" ]
  }
  if (use_tsan) {
    configs += [ "//buildconfig:tsan" ]
  }
}

set_defaults("static_library") {
  configs = [ "//buildconfig:global_config" ]
  configs += [ "//buildconfig:static_libaray" ]

  if (host_os == "mac") {
    configs += [ "//buildconfig:homebrew" ]
  }

  if (build_type == "release") {
    configs += [ "//buildconfig:release" ]
  } else if (build_type == "debug") {
    configs += [ "//buildconfig:debug" ]
  }

  if (use_asan) {
    configs += [ "//buildconfig:asan" ]
  }
  if (use_ubsan) {
    configs += [ "//buildconfig:ubsan" ]
  }
  if (use_tsan) {
    configs += [ "//buildconfig:tsan" ]
  }
}
